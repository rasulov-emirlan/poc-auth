version: "3.8"

services:
  fusionauth:
    image: fusionauth/fusionauth-app:1.36.4
    container_name: fusionauth
    depends_on:
      - fusionauth-db
    environment:
      FUSIONAUTH_APP_KICKSTART_FILE: /usr/local/fusionauth/config/kickstart.json
      FUSIONAUTH_APP_RUNTIME_MODE: development
      DATABASE_URL: jdbc:postgresql://fusionauth-db:5432/fusionauth?sslmode=disable
      DATABASE_ROOT_USER: postgres
      DATABASE_ROOT_PASSWORD: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      FUSIONAUTH_MEMORY: 512M
    ports:
      - "9011:9011" # FusionAuth admin UI and API port
    restart: unless-stopped
    volumes:
      - ./kickstart.json:/usr/local/fusionauth/config/kickstart.json

  fusionauth-db:
    image: postgres:14-alpine
    container_name: fusionauth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fusionauth
    volumes:
      - fusionauth-db-data:/var/lib/postgresql/data
    restart: always

  poc-auth-mongodb:
    image: mongo:latest
    container_name: poc-auth-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: auth
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped

  poc-auth-service:
    build: .
    container_name: poc-auth-service
    ports:
      - "8080:8080"
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./key_cert.pem:/app/key_cert.pem
    depends_on:
      - poc-auth-mongodb
    command: ["--config=/app/config.yaml"]
    restart: unless-stopped

volumes:
  mongodb_data:
  fusionauth-db-data:
